= 並行マーキング

本章ではG1GCの並行マーキングの実装を解説していきます。
本章を読む前に『アルゴリズム編 2.並行マーキング』を読むことをオススメします。

== 並行マーキングの全体像

まずは、並行マーキングの全体像を把握していきましょう。

=== 実行ステップ
『アルゴリズム編』の振り返りにはなりますが、はじめに並行マーキングの実行ステップについて簡単に説明しておきます。

並行マーキングは大まかに分けて次の5つのフェーズに別れています。

 1. 初期マークフェーズ
 2. 並行マークフェーズ
 3. 最終マークフェーズ
 4. 生存オブジェクトカウント
 5. 後始末

1.はルートスキャンをおこなうフェーズです。
このフェーズはセーフポイントで実行されます。

2.は1.によってマークされたオブジェクトをスキャンするフェーズです。
このフェーズはミューテータと並行、かつ複数のスレッドで並列に実行されます。

3.は2.でマークしきれなかったオブジェクトをスキャンするフェーズです。
このフェーズもセーフポイントで実行され、かつ複数のスレッドで並列に実行されます。

4.は各リージョンのマークが付いているオブジェクトのバイト数をカウントするフェーズです。
このステップはミューテータと並行、かつ複数のスレッドで並列に実行されます。

5.はマークフェーズの後始末をして次回のマークフェーズに備えるフェーズです。
このフェーズもセーフポイントで実行され、かつ複数のスレッドで並列に実行されます。

=== ConcurrentMarkThreadクラス
並列マーキングのスレッドは@<code>{ConcurrentMarkThread}クラスで実装されています。


=== 並行マーキングスレッド実行タイミング

== ステップ1―初期マークフェーズ

== ステップ2―並行マークフェーズ

=== エントリポイント

=== セーフポイントの停止

=== SATB

== ステップ3―最終マークフェーズ

== ステップ4―後始末
