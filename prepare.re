= 準備

HotspotVMとは何かという点から話を進めていきましょう。

== HotspotVMとは

HotspotVMはサン・マイクロシステムズ社（現：オラクル）主導で開発されているもっともポピュラーなJavaVMです。

HotspotVMの特徴は「プログラムの実行頻度の高い部分のみ機械語にコンパイルする」という点です。
これにはプログラムの実行時間を多く費やす部分（実行頻度の高い部分）を最適化し、プログラム全体の実行時間を短くしようという狙いがあります。
また、機械語へのコンパイルをある程度の範囲に絞るため、コンパイル時間が短くなるという効果もあります。
「実行頻度の高い部分」をHotspotと呼びます。この点がHotspotVMの名前の由来となっています。

HotspotVMのもう1つの特徴は複数のGCアルゴリズムが実装されているという点でしょう。
通常GCアルゴリズムは、レスポンス性能とスループット性能のどちらかを優先してチューンアップします。一般的にレスポンス性能を優先したGCアルゴリズムはスループット性能が低下します。
逆にスループット性能を優先したGCアルゴリズムはレスポンス性能が低下します。
このようなジレンマがあるため、現在のところ完璧なGCは存在しません。HotspotVMはこのジレンマに対する回答として「複数のGCアルゴリズムを実装する」という手法をとりました。
プログラマはアプリケーションの特性に合わせてHotspotVMのGCアルゴリズムを選択することができます。
つまり、レスポンス性能を求めるアプリケーションの場合は、それに適したGCアルゴリズムを「プログラマ」が選択できるということです。プログラマによるGCアルゴリズムの選択は優れた手法だと言えるでしょう。

== OpenJDKとは

Javaの開発用プルグラミングツール群のことをまとめて「Java SE Development Kit（JDK）」と呼びます。

JDKにはHotspotVMの他に、JavaのソースコードをJavaバイトコードにコンパイルするJavaコンパイラ、Javaソースコードからドキュメントを生成するツール等が同梱されています。

2006年11月、当時のサンはJDKのソースコードをGPLv2@<fn>{gpl}の下で無償公開することを発表しました。
このオープンソース版のJDKを「OpenJDK」と呼びます。

OpenJDKの最新バージョンは「OpenJDK7」と呼ばれています。
一方、オラクルが正式に提供するJDKの最新バージョンは「JDK7」と呼ばれています。
OpenJDK7とJDK7は名前は異なるものですが、両者のコードはほぼ同じです。
ただし、JDKにはライセンス的にクローズドなコードが一部あるため、OpenJDKではそれをオープンソースとして書き直しているようです。

//footnote[gpl][GPLv2（GNU General Public License）：コピーレフトのソフトウェアライセンスの第2版]

== ソースコード入手

OpenJDKの公式サイトは次のURLです。

@<href>{http://openjdk.java.net/}

//image[openjdk_site][OpenJDK公式サイト]

現在の最新のリリース版はOpenJDK7です。開発マイルストーンは次のURLで現在でも見ることができます。

@<href>{http://openjdk.java.net/projects/jdk7/milestones/}

本章ではOpenJDK7の最新バージョンである「jdk7-b147」を解説対象とします。

では、ソースコードをダウンロードしましょう。

OpenJDK7の最新開発バージョンのソースコードは次のURLからダウンロードすることができます。

@<href>{http://download.java.net/openjdk/jdk7/}

特定の開発バージョンのソースコードを入手したい場合は「Mercurial」@<fn>{mercurial}を使います。
MercurialとはPythonで作られたフリーの分散バージョン管理システムです。

OpenJDK内には複数のプロジェクトがあり、それにともなって複数のリポジトリがあります。
本章ではHotspotVMのソースコードのみ必要となりますので、Mercurialを使ってHotspotVMプロジェクトのリポジトリからソースコードを入手しましょう。
次のコマンドを入力すると、リポジトリからコードツリーをチェックアウトできます。

//emlist{
hg clone -r jdk7-b147 http://hg.openjdk.java.net/jdk7/jdk7/hotspot hotspot
//}

//footnote[mercurial][Mercurial公式サイト：http://mercurial.selenic.com/wiki/]

== ソース構成

HotspotVMのソースコードを入手したら、その中に「src」という名前のディレクトリがあるとおもいます。
そこにHotspotVMのソースコードが置かれています。

//table[dir][ディレクトリ構成]{
ディレクトリ	概要
------------------------------
cpu			CPU依存コード群
os			OS依存コード群
os_cpu		OS、CPU依存コード群（Linuxでかつx86等）
share		共通コード群
//}

@<table>{dir}内最後の「share」ディレクトリ内には「vm」というディレクトリがあります。
この「vm」ディレクトリの中にHotspotVMの大半部分のコードが置かれています。

//comment[TODO: vm内ディレクトリ構成]

また、「src」ディレクトリ内のソースコード分布を@<table>{source_stat}に示します。

//table[source_stat][ソースコード分布]{
言語	ソースコード行数	割合
---------------------------
C++		420,791 		93%
Java	21,231			5%
C		7,432			2%
//}

HotspotVMは約45万行のソースコードから成り立っており、そのほとんどがC++で書かれています。

== G1GCのアルゴリズム

HotspotVMには次のGCアルゴリズムが実装されています。

 * 世代別GC
 * 並列世代別GC
 * 並行マークスイープGC
 * G1GC

本書ではOpenJDK7から導入されたG1GCについて説明します。
